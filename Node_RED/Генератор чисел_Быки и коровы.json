[
    {
        "id": "ebde823abba13d59",
        "type": "tab",
        "label": "–ü–æ—Ç–æ–∫ 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1a1a1a1a1a1a1a1a",
        "type": "tab",
        "label": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2eeb7581fdc72645",
        "type": "tab",
        "label": "–ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã",
        "disabled": false,
        "info": ""
    },
    {
        "id": "group1",
        "type": "ui_group",
        "name": "–ò–≥—Ä–∞",
        "tab": "tab1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "tab1",
        "type": "ui_tab",
        "name": "–ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "button1",
        "type": "ui_button",
        "z": "1a1a1a1a1a1a1a1a",
        "name": "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ",
        "group": "group1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "randomFunction"
            ]
        ]
    },
    {
        "id": "randomFunction",
        "type": "function",
        "z": "1a1a1a1a1a1a1a1a",
        "name": "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ",
        "func": "let min = 1;\nlet max = 100;\nmsg.payload = Math.floor(Math.random() * (max - min + 1)) + min;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "textOutput"
            ]
        ]
    },
    {
        "id": "textOutput",
        "type": "ui_text",
        "z": "1a1a1a1a1a1a1a1a",
        "group": "group1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "–†–µ–∑—É–ª—å—Ç–∞—Ç",
        "label": "–í–∞—à–µ —á–∏—Å–ª–æ:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "c66d348b7e676895",
        "type": "ui_button",
        "z": "2eeb7581fdc72645",
        "name": "–ù–æ–≤–∞—è –∏–≥—Ä–∞",
        "group": "group1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "üîÅ –ù–æ–≤–∞—è –∏–≥—Ä–∞",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "271502fbe11db807"
            ]
        ]
    },
    {
        "id": "271502fbe11db807",
        "type": "function",
        "z": "2eeb7581fdc72645",
        "name": "–ó–∞–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ",
        "func": "function generateNumber() {\n    let digits = [];\n    while (digits.length < 4) {\n        let d = Math.floor(Math.random() * 10);\n        if (!digits.includes(d)) {\n            digits.push(d);\n        }\n    }\n    return digits.join(\"\");\n}\n\nlet secret = generateNumber();\nflow.set(\"secretNumber\", secret);\nmsg.payload = \"–ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ó–∞–≥–∞–¥–∞–Ω–æ 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "d8ccefd6a714ba53"
            ]
        ]
    },
    {
        "id": "14d6efd0326e942c",
        "type": "ui_text_input",
        "z": "2eeb7581fdc72645",
        "name": "–í–≤–æ–¥ —á–∏—Å–ª–∞",
        "label": "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:",
        "tooltip": "",
        "group": "group1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "469244f70c3d768e"
            ]
        ]
    },
    {
        "id": "469244f70c3d768e",
        "type": "function",
        "z": "2eeb7581fdc72645",
        "name": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
        "func": "let guess = msg.payload;\nlet secret = flow.get(\"secretNumber\");\n\nif (!/^[0-9]{4}$/.test(guess)) {\n    msg.payload = \"–í–≤–µ–¥–∏—Ç–µ 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –±—É–∫–≤.\";\n    return msg;\n}\n\nlet bulls = 0, cows = 0;\nfor (let i = 0; i < 4; i++) {\n    if (guess[i] === secret[i]) {\n        bulls++;\n    } else if (secret.includes(guess[i])) {\n        cows++;\n    }\n}\n\nif (bulls === 4) {\n    msg.payload = `üéâ –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${secret}!`;\n} else {\n    msg.payload = `${guess} ‚Äî ${bulls} –±—ã–∫(–æ–≤), ${cows} –∫–æ—Ä–æ–≤(—ã)`;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "d8ccefd6a714ba53"
            ]
        ]
    },
    {
        "id": "d8ccefd6a714ba53",
        "type": "ui_text",
        "z": "2eeb7581fdc72645",
        "group": "group1",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "–†–µ–∑—É–ª—å—Ç–∞—Ç",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 580,
        "y": 100,
        "wires": []
    }
]